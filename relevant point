局部特征点
局部特征点是图像特征的局部表达，它只能反正图像上具有的局部特殊性，所以它只适合于对图像进行匹配，检索等应用。对于图像理解则不太适合。而后者更关心一些全局特征，如颜色分布，纹理特征，主要物体的形状等。全局特征容易受到环境的干扰，光照，旋转，噪声等不利因素都会影响全局特征。相比而言，局部特征点，往往对应着图像中的一些线条交叉，明暗变化的结构中，受到的干扰也少。

特征向量及其几何解释
某一类对象的多个或多种特性组合在一起，形成一个特征向量来代表该类对象，如果只有单个数值特征，则特征向量为一个一维向量，如果是n个特性的组合，则为一个n维特征向量。该类特征向量常常作为识别系统的输入。实际上，一个n维特征就是位于n维空间中的点，而识别分类的任务就是找到对这个n维空间的一种划分。

图像梯度
相邻像素之间的差异通常是非常有用的特征。通常情况下像素值在对象的边界处是不同，当存在阴影、图案内或纹理表面时。相邻像素之间的差值称为图像梯度。如果相邻像素灰度值有变化，那么梯度就有值，如果相邻像素灰度值没有变化，那么梯度就为0。如果我们把梯度值与对应的像素相加，那么灰度值没有变化的，像素值不变，而有梯度值的，灰度值变大了。梯度的核心目的是得到像素点与其相邻像素的灰度值变化情况，并通过这种变化来增强图像。
图像的一阶与二阶导数计算在图像特征提取与边缘提取中十分重要。一阶与二阶导数的作用，通常情况下：
一阶导数可以反应出图像灰度梯度的变化情况
二阶导数可以提取出图像的细节同时双响应图像梯度变化情况
一维函数的一阶微分的基本定义是这样的：

图像是一个二维函数f(x,y)，其微分当然就是偏微分。因此有：

 
图像是一个离散的二维函数，ϵ不能无限小，我们的图像是按照像素来离散的，最小的ϵ就是1像素。因此，上面的图像微分又变成了如下的形式（ϵ=1）：
 
 
这分别是图像在(x, y)点处x方向和y方向上的梯度，从上面的表达式可以看出来，图像的梯度相当于2个相邻像素之间的差值。相加后的新图像对比度显然增强了，尤其是图像中物体的轮廓和边缘，与背景大大加强了区别，这就是用梯度来增强图像的原理。
计算图像梯度的最简单的方法是分别计算图像沿水平（X）和垂直（Y）轴的差异，然后将它们合成为二维矢量。图像梯度是矢量，矢量可以由两个分量来表示：方向和幅度。因此，我们仍然需要决定如何设计直方图来表示这两个分量。SIFT提供了一个解决方案，其中图像梯度被它们的方向角所包括，由每个梯度的大小加权。以下是流程：
1.将 0°- 360°分成相等大小的容器。
2.对于邻域中的每个像素，将权重W添加到对应于其方向角的容器中。
3.W是梯度的大小和其他相关信息的函数。如果梯度较大，权重应该很大，而图像邻域中心附近的像素比远离像素的像素更大。
4.正则化直方图。

图像梯度可以用来从图像中提取信息。梯度图像是从原始图像中创建出来的（通常通过卷积过滤器，比如最简单的Sobel过滤器)。每个梯度图像中的像素被用来计算在一个给定的方向，在原始图像中同一个像素的强度变化。为了得到该方向的全范围，梯度图像在x 和y 方向上都会被计算。
图像梯度最常见的用途之一是边缘检测。在计算梯度图像后，拥有大梯度值的像素很可能是边缘像素。在梯度的方向，拥有最大梯度值的响度则很有可能成为边缘像素，而且跟踪边缘的方向很可能是垂直于梯度的方向的。
图像梯度可以用于发现有用的特征robust feature 和纹理匹配texture matching 。不同的照明或相机的属性会导致两张同一场景的照片有截然不同的像素值。解决这个问题的一个方法是基于从原始图像中计算得到的梯度图像来计算纹理或特征特点。这些梯度不容易受到亮度和相机的变化。

Hessian矩阵
在sift中，海森矩阵起着消除边缘角点的作用，将一些只对单边响应大的角点给踢出，而在Harris中更是将hessian矩阵作为判断角点的准则。利用hessian矩阵的迹和行列式值来计算角点的双边响应和响应强度。

方向梯度直方图(Histogram of Oriented Gradient, HOG)
人类视觉系统中，有向边缘非常重要。而特征表示的有向梯度直方图尝试获取同样的感觉，并且测量图像中边缘的局部方向。具体做法：先获取图像，然后将图像按八个像素区分为八份。然后再八个像素区的每一个部分，计算每个像素值的主要边缘方向。把这些边缘方向量化到几个组。然后在每一个区域内，计算不同的边缘方向，从而得到一个直方图。现在的图像特征，就是这些不同组的边缘方向直方图。这个直方图是从图像的八个区域得来。可以看出图像中有哪些不同类型的边缘。即使是图像的不同部分、不同区域内存在着哪些类型的边缘都可以知道。
